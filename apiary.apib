HOST: http://api.glsdashboard.com/

--- GLS Dashboard API v1.2.7 ---
---
All comments can be written in (support [Markdown](http://daringfireball.net/projects/markdown/syntax) syntax)

Blueprint controlled through a [github repo](https://github.com/cmcculloh/test-apiary/blob/master/apiary.apib)

[REST Spec](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)
---

--
Issues
--
Retrieve Issues
GET /issues
> Content-Type: aplication/json
{ "resolved": false }
< 200
< Content-Type: application/json
{ "items": [
    {
	   "url":"/issues/1",
	   "id":1,
	   "created":"Wed Jun 12 2013 11:33:14 GMT-0400 (EDT)",
	   "site_id":"1",
           "site_name":"First Church of Christ",
           "issue":"Broadcasting Web Stream - Due to Weather",
           "contact_person":"John Smith",
           "contact_number":"555-555-1212",
           "issue_length":"5"
	}
] }

Create new issue
POST /issue
> Content-Type: application/json
 {
	   "site_id":"1",
           "site_name":"First Church of Christ",
           "issue":"Broadcasting Web Stream - Due to Weather",
           "contact_person":"John Smith",
           "contact_number":"555-555-1212",
           "issue_length":"5"
	}
< 201
< Content-Type: application/json
{ "items": [
     {
	   "url":"/issues/1",
	   "id":1,
	   "created":"Wed Jun 12 2013 11:33:14 GMT-0400 (EDT)",
	   "site_id":"1",
           "site_name":"First Church of Christ",
           "issue":"Broadcasting Web Stream - Due to Weather",
           "contact_person":"John Smith",
           "contact_number":"555-555-1212",
           "issue_length":"5"
	}] }
+++++
< 400
{ "items": [
{ "message": "please check your payload and try again" }
] }

Update (200) or Create (201) a user
PUT /issue/{id}
> Content-Type: application/json
 {
	   "site_id":"1",
           "site_name":"First Church of Christ",
           "issue":"Broadcasting Web Stream - Due to Weather",
           "contact_person":"John Smith",
           "contact_number":"555-555-1212",
           "issue_length":"5"
	}
< 200
< Content-Type: application/json
{ "items": [
 {
	   "site_id":"1",
           "site_name":"First Church of Christ",
           "issue":"Broadcasting Web Stream - Due to Weather",
           "contact_person":"John Smith",
           "contact_number":"555-555-1212",
           "issue_length":"5"
	}] }
+++++
< 201
< Content-Type: application/json
{ "items": [ {
	   "site_id":"1",
           "site_name":"First Church of Christ",
           "issue":"Broadcasting Web Stream - Due to Weather",
           "contact_person":"John Smith",
           "contact_number":"555-555-1212",
           "issue_length":"5"
	}] }
+++++
< 400
{ "items": [
{ "message": "please check your payload and try again" }
] }


--
Chat
This is very much subject to change once i start actually implementing chat...
--
Send a chat message
POST /chat
> Content-Type: application/json
{ "message": "some text here", "userid": 1, "recipients": [1, 2, {"userid": 2}] }
< 204

Retrieve chat messages applicable to user (includes chat sent directly to that user, to user's site and to all in user's site type, etc.). I'm thinking I'll handle pagination on client side
GET /chat
> Content-Type: application/json
{ "userid": 1 }
< 200
< Content-Type: application/json
{ "items": [
    {
    	"user_name": "John Doe",
	    "message": "Some text here",
	    "date": "Wed Jun 12 2013 11:33:14 GMT-0400 (EDT)"
	}
] }

--
Login
--
login a user
POST /login
> Content-Type: application/json
{ "username":"john@gmail.com", "userpassword": "password" }
< 200
< Content-Type: application/json
{ "items": [
    {
       "url":"/users/1",
       "id":1,
       "username":"jdoe",
	   "email":"jdoe@gmail.com",
	   "full_name":"John Doe",
	   "mobile_phone":"555-555-5555",
	   "isAdmin":false,
	   "type":1,
	   "broadcasting":"live",
	   "location":{
	      "street":"51 Carriage Lake Drive",
	      "city":"Brownsburg",
	      "state":"IN",
	      "zip":"46112"
	   },
       "profileUpdatePrompt": true
	}
] }
+++++
< 400
{ "items": [
{ "message": "invalid username/password" }
] }

--
Reset Password
--
reset a user's password
GET /reset-password
> Content-Type: application/json
{ "email": "john@gmail.com" }
< 205

--
Users
The following is a section of resources related to users
--
retrieve all users
GET /users
< 200
< Content-Type: application/json
{ "items": [
    {
	   "url":"/users/1",
	   "id":1,
	   "username":"jdoe",
	   "email":"jdoe@gmail.com",
       "full_name":"John Doe",
       "mobile_phone":"555-555-5555",
	   "isAdmin":false,
	   "type":1,
	   "broadcasting":"live",
	   "location":{
	      "street":"51 Carriage Lake Drive",
	      "city":"Brownsburg",
	      "state":"IN",
	      "zip":"46112"
	   },
       "profileUpdatePrompt": false
	}
] }

retrieve all users by site (location)
GET /users/site/{site}
< 200
< Content-Type: application/json
{ "items": [
    {
	   "url":"/users/1",
	   "id":1,
	   "username":"jdoe",
	   "email":"jdoe@gmail.com",
       "full_name":"John Doe",
       "mobile_phone":"555-555-5555",
	   "isAdmin":false,
	   "type":1,
	   "broadcasting":"live",
	   "location":{
	      "street":"51 Carriage Lake Drive",
	      "city":"Brownsburg",
	      "state":"IN",
	      "zip":"46112"
	   },
       "profileUpdatePrompt": false
	}
] }


retrieve requested user by id
GET /users/{1}
< 200
< Content-Type: application/json
{ "items": [
    {
       "url":"/users/1",
	   "id":1,
	   "username":"jdoe",
	   "email":"jdoe@gmail.com",
       "full_name":"John Doe",
       "mobile_phone":"555-555-5555",
	   "isAdmin":false,
	   "type":1,
	   "broadcasting":"live",
	   "location":{
	      "street":"51 Carriage Lake Drive",
	      "city":"Brownsburg",
	      "state":"IN",
	      "zip":"46112"
	   },
       "profileUpdatePrompt": false
	}
] }
+++++
< 400
< Content-Type: application/json
{ "items": [
    { "message": "Please provide a user's id" }
] }

Create new user
POST /user
> Content-Type: application/json
{ "username":"jdoe", "email": "jdoe@gmail.com", "full_name":"John Doe", "mobile_phone":"555-555-5555", "isAdmin": false, "type": 1, "broadcasting": "live", "location": {"street": "51 Carriage Lake Drive", "city": "Brownsburg", "state": "IN", "zip": "46112"} }
< 201
< Content-Type: application/json
{ "items": [
    {
       "url":"/users/1",
	   "id":1,
	   "username":"jdoe",
	   "email":"jdoe@gmail.com",
       "full_name":"John Doe",
       "mobile_phone":"555-555-5555",
	   "isAdmin":false,
	   "type":1,
	   "broadcasting":"live",
	   "location":{
	      "street":"51 Carriage Lake Drive",
	      "city":"Brownsburg",
	      "state":"IN",
	      "zip":"46112"
	   },
       "profileUpdatePrompt": false
	}] }
+++++
< 400
{ "items": [
{ "message": "please check your payload and try again" }
] }

Update (200) or Create (201) a user
PUT /user/{id}
> Content-Type: application/json
{ "username":"jdoe", "email": "jdoe@gmail.com", "password": "password", "full_name":"John Doe", "mobile_phone":"555-555-5555", "isAdmin": false, "type": 1, "broadcasting": "live", "location": {"street": "51 Carriage Lake Drive", "city": "Brownsburg", "state": "IN", "zip": "46112"} }
< 200
< Content-Type: application/json
{ "items": [
{
       "url":"/users/1",
       "id":1,
	   "username":"jdoe",
	   "email":"jdoe@gmail.com",
       "full_name":"John Doe",
       "mobile_phone":"555-555-5555",
	   "isAdmin":false,
	   "type":1,
	   "broadcasting":"live",
	   "location":{
	      "street":"51 Carriage Lake Drive",
	      "city":"Brownsburg",
	      "state":"IN",
	      "zip":"46112"
	   },
       "profileUpdatePrompt": false
	}] }
+++++
< 201
< Content-Type: application/json
{ "items": [
{
       "url":"/users/1",
       "id":1,
	   "username":"jdoe",
	   "email":"jdoe@gmail.com",
       "full_name":"John Doe",
       "mobile_phone":"555-555-5555",
	   "isAdmin":false,
	   "type":1,
	   "broadcasting":"live",
	   "location":{
	      "street":"51 Carriage Lake Drive",
	      "city":"Brownsburg",
	      "state":"IN",
	      "zip":"46112"
	   },
       "profileUpdatePrompt": false
	}] }
+++++
< 400
{ "items": [
{ "message": "please check your payload and try again" }
] }


Delete user by id
DELETE /user/{id}
> Content-Type: application/json
{ "id":1, "username": "jdoe" }
< 204
+++++
< 400
{ "items": [
{ "message": "please provide user's id" }
] }


